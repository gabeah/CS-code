<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project source="3.7.2" version="1.0">
  This file is intended to be loaded by Logisim-evolution v3.7.2(https://github.com/logisim-evolution/).

  <lib desc="#Wiring" name="0">
    <tool name="Pin">
      <a name="appearance" val="classic"/>
    </tool>
  </lib>
  <lib desc="#Gates" name="1"/>
  <lib desc="#Plexers" name="2"/>
  <lib desc="#Arithmetic" name="3"/>
  <lib desc="#Memory" name="4"/>
  <lib desc="#I/O" name="5"/>
  <lib desc="#TTL" name="6"/>
  <lib desc="#TCL" name="7"/>
  <lib desc="#Base" name="8"/>
  <lib desc="#BFH-Praktika" name="9"/>
  <lib desc="#Input/Output-Extra" name="10"/>
  <lib desc="#Soc" name="11"/>
  <main name="main"/>
  <options>
    <a name="gateUndefined" val="ignore"/>
    <a name="simlimit" val="1000"/>
    <a name="simrand" val="0"/>
  </options>
  <mappings>
    <tool lib="8" map="Button2" name="Menu Tool"/>
    <tool lib="8" map="Button3" name="Menu Tool"/>
    <tool lib="8" map="Ctrl Button1" name="Menu Tool"/>
  </mappings>
  <toolbar>
    <tool lib="8" name="Poke Tool"/>
    <tool lib="8" name="Edit Tool"/>
    <tool lib="8" name="Wiring Tool"/>
    <tool lib="8" name="Text Tool"/>
    <sep/>
    <tool lib="0" name="Pin"/>
    <tool lib="0" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
    </tool>
    <sep/>
    <tool lib="1" name="NOT Gate"/>
    <tool lib="1" name="AND Gate"/>
    <tool lib="1" name="OR Gate"/>
    <tool lib="1" name="XOR Gate"/>
    <tool lib="1" name="NAND Gate"/>
    <tool lib="1" name="NOR Gate"/>
    <sep/>
    <tool lib="4" name="D Flip-Flop"/>
    <tool lib="4" name="Register"/>
  </toolbar>
  <circuit name="main">
    <a name="circuit" val="main"/>
    <a name="circuitnamedboxfixedsize" val="true"/>
    <a name="simulationFrequency" val="1.0"/>
    <comp lib="0" loc="(100,120)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="X1"/>
    </comp>
    <comp lib="0" loc="(100,160)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="X0"/>
    </comp>
    <comp lib="0" loc="(100,260)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="Y2"/>
    </comp>
    <comp lib="0" loc="(100,300)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="Y1"/>
    </comp>
    <comp lib="0" loc="(100,340)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="Y0"/>
    </comp>
    <comp lib="0" loc="(100,80)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="X2"/>
    </comp>
    <comp lib="0" loc="(620,250)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="1" loc="(160,140)" name="NOT Gate"/>
    <comp lib="1" loc="(160,320)" name="NOT Gate"/>
    <comp lib="1" loc="(470,200)" name="AND Gate"/>
    <comp lib="1" loc="(470,290)" name="AND Gate"/>
    <comp lib="1" loc="(590,250)" name="OR Gate"/>
    <comp lib="8" loc="(100,31)" name="Text">
      <a name="text" val="Gabriel Howland"/>
    </comp>
    <comp lib="8" loc="(432,384)" name="Text">
      <a name="text" val="whether a number is odd or not"/>
    </comp>
    <comp lib="8" loc="(449,353)" name="Text">
      <a name="text" val="for 'x0' and 'y0' are the only determinates"/>
    </comp>
    <comp lib="8" loc="(519,151)" name="Text">
      <a name="text" val="compares if either number is odd"/>
    </comp>
    <wire from="(100,120)" to="(120,120)"/>
    <wire from="(100,160)" to="(120,160)"/>
    <wire from="(100,260)" to="(120,260)"/>
    <wire from="(100,300)" to="(120,300)"/>
    <wire from="(100,340)" to="(120,340)"/>
    <wire from="(100,80)" to="(120,80)"/>
    <wire from="(120,100)" to="(120,120)"/>
    <wire from="(120,120)" to="(320,120)"/>
    <wire from="(120,140)" to="(120,160)"/>
    <wire from="(120,140)" to="(130,140)"/>
    <wire from="(120,160)" to="(320,160)"/>
    <wire from="(120,240)" to="(120,260)"/>
    <wire from="(120,260)" to="(320,260)"/>
    <wire from="(120,280)" to="(120,300)"/>
    <wire from="(120,300)" to="(320,300)"/>
    <wire from="(120,320)" to="(120,340)"/>
    <wire from="(120,320)" to="(130,320)"/>
    <wire from="(120,340)" to="(340,340)"/>
    <wire from="(120,60)" to="(120,80)"/>
    <wire from="(120,80)" to="(320,80)"/>
    <wire from="(160,140)" to="(360,140)"/>
    <wire from="(160,320)" to="(380,320)"/>
    <wire from="(320,160)" to="(320,180)"/>
    <wire from="(320,180)" to="(420,180)"/>
    <wire from="(340,220)" to="(340,340)"/>
    <wire from="(340,220)" to="(420,220)"/>
    <wire from="(360,140)" to="(360,270)"/>
    <wire from="(360,270)" to="(420,270)"/>
    <wire from="(380,310)" to="(380,320)"/>
    <wire from="(380,310)" to="(420,310)"/>
    <wire from="(470,200)" to="(500,200)"/>
    <wire from="(470,290)" to="(500,290)"/>
    <wire from="(500,200)" to="(500,230)"/>
    <wire from="(500,230)" to="(540,230)"/>
    <wire from="(500,270)" to="(500,290)"/>
    <wire from="(500,270)" to="(540,270)"/>
    <wire from="(590,250)" to="(620,250)"/>
  </circuit>
</project>
